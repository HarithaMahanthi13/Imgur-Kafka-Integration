openapi: 3.0.1
info:
  title: SFS-Image-Management
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /sfs/users/register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /sfs/users/login:
    post:
      tags:
        - user-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /sfs/images/upload:
    post:
      tags:
        - image-controller
      operationId: uploadImage
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /kafka/images/upload:
    post:
      tags:
        - kafka-producer-controller
      operationId: uploadImage_1
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: imageName
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /sfs/users/{username}:
    get:
      tags:
        - user-controller
      operationId: getUserProfile
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserProfile'
  /sfs/images:
    get:
      tags:
        - image-controller
      operationId: getUserImages
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
  /sfs/images/{id}:
    delete:
      tags:
        - image-controller
      operationId: deleteImage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseMessage'
components:
  schemas:
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        imgurId:
          type: string
        link:
          type: string
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sfsUser:
          type: string
        sfsUserpassword:
          type: string
        image:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    ResponseMessage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          type: string
        imgurId:
          type: string
        imageName:
          type: string
        imageLink:
          type: string
        message:
          type: string
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
